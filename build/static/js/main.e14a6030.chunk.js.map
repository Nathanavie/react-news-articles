{"version":3,"sources":["components/Heading.js","components/Header.js","components/Title.js","components/Img.js","components/Desc.js","components/Content.js","components/ContentContainer.js","components/ByKeyword.js","components/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["Heading","className","React","Component","Header","this","props","src","alt","Title","article","title","Img","href","link","rel","target","img","Desc","desc","Content","openArticle","event","console","log","urlToImage","url","description","ContentContainer","fetchData","state","country","fetch","then","res","json","setState","isLoaded","items","articles","error","handleChange","name","value","handlesubmit","message","id","onBlur","onChange","type","map","info","ByKeyword","undefined","alert","submitHandler","e","preventDefault","initialState","autocomplete","onSubmit","onClick","Portfolio","App","activeId","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e14a6030.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Heading extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"heading\">\r\n        <h1>\r\n          Welcome to News By Nathan\r\n        </h1>\r\n\r\n        <h2>\r\n          This site will display some of the most recent news articles that have been posted from news sources in different countries.\r\n        </h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Heading;\r\n","import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    let article = this.props\r\n    return(\r\n      <header>\r\n        <img src=\"https://nathanatherton.com/img/logo.svg\" alt=\"This is my default logo\"/>\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header;\r\n","import React from 'react';\n\nclass Title extends React.Component {\n  render() {\n    let article = this.props\n    return(\n      <h2>\n        {article.title}\n      </h2>\n    )\n  }\n}\nexport default Title;\n","import React from 'react';\n\nclass Img extends React.Component {\n  render() {\n    let article = this.props\n        return(\n          <div>\n          <a href={article.link} rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"Article\"  src={article.img} /></a>\n          </div>\n        )\n    }\n}\nexport default Img;\n","import React from 'react';\n\nclass Desc extends React.Component {\n  render() {\n    let article = this.props\n    return(\n        <h4>{article.desc}</h4>\n    )\n  }\n}\nexport default Desc;\n","import React from 'react';\nimport Title from './Title'\n// import Author from './Author'\nimport Img from './Img'\nimport Desc from './Desc'\n\nclass Content extends React.Component {\n\n  openArticle = event => {\n    console.log('clicked on article link')\n\n  }\n\n\n  render() {\n    let article = this.props\n    if (article.urlToImage == null) {\n      return(\n        <section className=\"hidden\" />\n      )\n    }\n    return(\n      <a className=\"articleLink\" href={article.url} target=\"_blank\">\n        <div className=\"newsArticle\">\n          <div className=\"articleImage\">\n          <Img img={article.urlToImage} link={article.url}/>\n          </div>\n          <div className=\"articleWording\">\n            <Title title={article.title}/>\n            <Desc desc={article.description} />\n          </div>\n        </div>\n      </a>\n    )\n  }\n}\nexport default Content;\n","import React from 'react';\r\nimport Content from './Content'\r\nimport Heading from './Heading'\r\n\r\nclass ContentContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      country: 'gb'\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = (event) => {\r\n    console.log('test')\r\n    console.log(this.state.country)\r\n    let country = this.state.country\r\n    console.log(country)\r\n    var link = `https://newsapi.org/v2/top-headlines?country=${country}&apiKey=e1de0dd1b4fd47ad8340f477e90210b8`\r\n    fetch(link)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: json.articles\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n\r\n    // document.getElementById('test').blur();\r\n  }\r\n\r\n  handlesubmit = event => {\r\n    console.log(this.state.country)\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items, country } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <>\r\n        <Heading />\r\n          <form>\r\n          <label>Choose a country</label>\r\n            <select className=\"select-css\" id=\"test\" name=\"country\" value={country} onBlur={this.fetchData} onChange={this.handleChange}>\r\n              <option value=\"ar\">Argentina</option>\r\n              <option value=\"au\">Australia</option>\r\n              <option value=\"at\">Austria</option>\r\n              <option value=\"be\">Belgium</option>\r\n              <option value=\"br\">Brazil</option>\r\n              <option value=\"ca\">Canada</option>\r\n              <option value=\"co\">Colombia</option>\r\n              <option value=\"fr\">France</option>\r\n              <option value=\"de\">Germany</option>\r\n              <option value=\"hk\">Hong Kong</option>\r\n              <option value=\"ie\">Ireland</option>\r\n              <option value=\"it\">Italy</option>\r\n              <option value=\"gb\">United Kingdom</option>\r\n              <option value=\"us\">United States</option>\r\n            </select>\r\n            <button\r\n              type=\"button\"\r\n              name=\"submit\"\r\n              value=\"Retrieve News!\"\r\n            >\r\n            Retrieve News!\r\n            </button>\r\n          </form>\r\n          <div className=\"container\">{this.state.items.map (info => <Content {...info} />)}</div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ContentContainer;\r\n","import React from 'react';\r\nimport Content from './Content'\r\nimport Heading from './Heading'\r\n\r\nclass ByKeyword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initialState = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      country: ''\r\n    }\r\n\r\n    this.state = this.initialState\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  fetchData = (event) => {\r\n    if (this.state.items == undefined) {\r\n        alert('Please fill in a value')\r\n    } else {\r\n    console.log('test')\r\n    console.log(this.state.country)\r\n    let country = this.state.country\r\n    console.log(country)\r\n    var link = `https://newsapi.org/v2/everything?q=${country}&apiKey=e1de0dd1b4fd47ad8340f477e90210b8`\r\n    console.log(link)\r\n    fetch(link)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: json.articles\r\n          });\r\n          console.log('here')\r\n          console.log(this.state.items)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n\r\n    // document.getElementById('test').blur();\r\n  }\r\n\r\n  handlesubmit = event => {\r\n    console.log(this.state.country)\r\n    this.fetchData();\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items, country } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>\r\n        <form\r\n          className=\"formBefore\"\r\n          autocomplete=\"off\"\r\n          onSubmit={this.submitHandler}\r\n        >\r\n        <label>What would you like your news to be about?</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"country\"\r\n            value={country}\r\n            onChange={this.handleChange}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              name=\"submit\"\r\n              value=\"Retrieve News!\"\r\n              onClick={this.fetchData}\r\n            >\r\n            Retrieve News!\r\n            </button>\r\n        </form>\r\n      </div>;\r\n    } else {\r\n      return (\r\n        <>\r\n        <Heading />\r\n          <form>\r\n          <label>Choose a country</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              value={country}\r\n              onBlur={this.fetchData}\r\n              onChange={this.handleChange}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                name=\"submit\"\r\n                value=\"Retrieve News!\"\r\n              >\r\n              Retrieve News!\r\n              </button>\r\n          </form>\r\n            <div className=\"container\">{this.state.items.map (info => <Content {...info} />)}</div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ByKeyword;\r\n","import React from 'react';\r\nimport Content from './Content'\r\n\r\nclass Portfolio extends React.Component {\r\n  render() {\r\n    return(\r\n      <iframe src=\"https://nathanatherton.com\">\r\n        Sorry, Your browser does not support inline frames, please click this link: <a href=\"https://nathanatherton.com\">Portfolio</a>\r\n      </iframe>\r\n      )\r\n    }\r\n  }\r\nexport default Portfolio;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Heading from './components/Heading'\nimport Header from './components/Header'\nimport ContentContainer from './components/ContentContainer';\nimport ByKeyword from './components/ByKeyword';\nimport Portfolio from './components/Portfolio';\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    activeId: 'News'\n  }\n\n  render() {\n    return(\n      <div>\n      <Header />\n        <nav className=\"navbar\">\n            <Link to={'/'} id=\"News\" >News By Country</Link>\n            <Link to={'/ByKeyword'} id=\"Why\">News By Keyword</Link>\n            <Link to={'/Portfolio'} id=\"Portfolio\">My Portfolio Site</Link>\n        </nav>\n        <Switch>\n          <Route exact path='/' component={ContentContainer} />\n          <Route path='/ByKeyword' component={ByKeyword} />\n          <Route path='/Portfolio' component={Portfolio} />\n        </Switch>\n\n      </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  (\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ),\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}